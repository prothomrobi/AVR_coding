
batman3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000228  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000027c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007f3  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000058e  00000000  00000000  00000afb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000354  00000000  00000000  00001089  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000013e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000031a  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002f4  00000000  00000000  0000171e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001a12  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 12 01 	jmp	0x224	; 0x224 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <util/delay.h>


int main(void)
{
	DDRD = 0xff;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	81 bb       	out	0x11, r24	; 17
	DDRB = 0xff;
  70:	87 bb       	out	0x17, r24	; 23
	DDRC = 0xff;
  72:	84 bb       	out	0x14, r24	; 20
	while (1)
	{
		
		int m=0;
		for(m;m<8;m+=2){
			PORTC |=(1<<(PC0+m));
  74:	81 e0       	ldi	r24, 0x01	; 1
  76:	90 e0       	ldi	r25, 0x00	; 0
	DDRB = 0xff;
	DDRC = 0xff;
	while (1)
	{
		
		int m=0;
  78:	20 e0       	ldi	r18, 0x00	; 0
  7a:	30 e0       	ldi	r19, 0x00	; 0
		for(m;m<8;m+=2){
			PORTC |=(1<<(PC0+m));
  7c:	65 b3       	in	r22, 0x15	; 21
  7e:	ac 01       	movw	r20, r24
  80:	02 2e       	mov	r0, r18
  82:	02 c0       	rjmp	.+4      	; 0x88 <main+0x1c>
  84:	44 0f       	add	r20, r20
  86:	55 1f       	adc	r21, r21
  88:	0a 94       	dec	r0
  8a:	e2 f7       	brpl	.-8      	; 0x84 <main+0x18>
  8c:	46 2b       	or	r20, r22
  8e:	45 bb       	out	0x15, r20	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  90:	4f e7       	ldi	r20, 0x7F	; 127
  92:	58 e3       	ldi	r21, 0x38	; 56
  94:	61 e0       	ldi	r22, 0x01	; 1
  96:	41 50       	subi	r20, 0x01	; 1
  98:	50 40       	sbci	r21, 0x00	; 0
  9a:	60 40       	sbci	r22, 0x00	; 0
  9c:	e1 f7       	brne	.-8      	; 0x96 <main+0x2a>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <main+0x34>
  a0:	00 00       	nop
	DDRC = 0xff;
	while (1)
	{
		
		int m=0;
		for(m;m<8;m+=2){
  a2:	2e 5f       	subi	r18, 0xFE	; 254
  a4:	3f 4f       	sbci	r19, 0xFF	; 255
  a6:	28 30       	cpi	r18, 0x08	; 8
  a8:	31 05       	cpc	r19, r1
  aa:	41 f7       	brne	.-48     	; 0x7c <main+0x10>
  ac:	27 e0       	ldi	r18, 0x07	; 7
  ae:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(50);
		}
		
		int n=7;
		for(n;n>=0;n-=2){
			PORTC &=~(1<<(PC0+n));
  b0:	55 b3       	in	r21, 0x15	; 21
  b2:	bc 01       	movw	r22, r24
  b4:	02 2e       	mov	r0, r18
  b6:	02 c0       	rjmp	.+4      	; 0xbc <main+0x50>
  b8:	66 0f       	add	r22, r22
  ba:	77 1f       	adc	r23, r23
  bc:	0a 94       	dec	r0
  be:	e2 f7       	brpl	.-8      	; 0xb8 <main+0x4c>
  c0:	46 2f       	mov	r20, r22
  c2:	40 95       	com	r20
  c4:	45 23       	and	r20, r21
  c6:	45 bb       	out	0x15, r20	; 21
  c8:	4f e7       	ldi	r20, 0x7F	; 127
  ca:	58 e3       	ldi	r21, 0x38	; 56
  cc:	61 e0       	ldi	r22, 0x01	; 1
  ce:	41 50       	subi	r20, 0x01	; 1
  d0:	50 40       	sbci	r21, 0x00	; 0
  d2:	60 40       	sbci	r22, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <main+0x62>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x6c>
  d8:	00 00       	nop
			PORTC |=(1<<(PC0+m));
			_delay_ms(50);
		}
		
		int n=7;
		for(n;n>=0;n-=2){
  da:	22 50       	subi	r18, 0x02	; 2
  dc:	31 09       	sbc	r19, r1
  de:	2f 3f       	cpi	r18, 0xFF	; 255
  e0:	4f ef       	ldi	r20, 0xFF	; 255
  e2:	34 07       	cpc	r19, r20
  e4:	29 f7       	brne	.-54     	; 0xb0 <main+0x44>
  e6:	27 e0       	ldi	r18, 0x07	; 7
  e8:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(50);
		}
		
		int a=7;
		for(a;a>=0;a--){
			PORTB |=(1<<(PB0+a));
  ea:	68 b3       	in	r22, 0x18	; 24
  ec:	ac 01       	movw	r20, r24
  ee:	02 2e       	mov	r0, r18
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <main+0x8a>
  f2:	44 0f       	add	r20, r20
  f4:	55 1f       	adc	r21, r21
  f6:	0a 94       	dec	r0
  f8:	e2 f7       	brpl	.-8      	; 0xf2 <main+0x86>
  fa:	46 2b       	or	r20, r22
  fc:	48 bb       	out	0x18, r20	; 24
  fe:	5f e7       	ldi	r21, 0x7F	; 127
 100:	68 e3       	ldi	r22, 0x38	; 56
 102:	41 e0       	ldi	r20, 0x01	; 1
 104:	51 50       	subi	r21, 0x01	; 1
 106:	60 40       	sbci	r22, 0x00	; 0
 108:	40 40       	sbci	r20, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x98>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0xa2>
 10e:	00 00       	nop
			PORTC &=~(1<<(PC0+n));
			_delay_ms(50);
		}
		
		int a=7;
		for(a;a>=0;a--){
 110:	21 50       	subi	r18, 0x01	; 1
 112:	31 09       	sbc	r19, r1
 114:	50 f7       	brcc	.-44     	; 0xea <main+0x7e>
 116:	20 e0       	ldi	r18, 0x00	; 0
 118:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(50);
		}
		
		int b=0;
		for(b;b<8;b++){
			PORTB &=~(1<<(PB0+b));
 11a:	58 b3       	in	r21, 0x18	; 24
 11c:	bc 01       	movw	r22, r24
 11e:	02 2e       	mov	r0, r18
 120:	02 c0       	rjmp	.+4      	; 0x126 <main+0xba>
 122:	66 0f       	add	r22, r22
 124:	77 1f       	adc	r23, r23
 126:	0a 94       	dec	r0
 128:	e2 f7       	brpl	.-8      	; 0x122 <main+0xb6>
 12a:	46 2f       	mov	r20, r22
 12c:	40 95       	com	r20
 12e:	45 23       	and	r20, r21
 130:	48 bb       	out	0x18, r20	; 24
 132:	6f e7       	ldi	r22, 0x7F	; 127
 134:	48 e3       	ldi	r20, 0x38	; 56
 136:	51 e0       	ldi	r21, 0x01	; 1
 138:	61 50       	subi	r22, 0x01	; 1
 13a:	40 40       	sbci	r20, 0x00	; 0
 13c:	50 40       	sbci	r21, 0x00	; 0
 13e:	e1 f7       	brne	.-8      	; 0x138 <main+0xcc>
 140:	00 c0       	rjmp	.+0      	; 0x142 <main+0xd6>
 142:	00 00       	nop
			PORTB |=(1<<(PB0+a));
			_delay_ms(50);
		}
		
		int b=0;
		for(b;b<8;b++){
 144:	2f 5f       	subi	r18, 0xFF	; 255
 146:	3f 4f       	sbci	r19, 0xFF	; 255
 148:	28 30       	cpi	r18, 0x08	; 8
 14a:	31 05       	cpc	r19, r1
 14c:	31 f7       	brne	.-52     	; 0x11a <main+0xae>
 14e:	23 e0       	ldi	r18, 0x03	; 3
 150:	30 e0       	ldi	r19, 0x00	; 0
		}
		
		
		int j=3;
		for(j;j>=0;j--){
			PORTD |=(1<<(PD0+j));
 152:	62 b3       	in	r22, 0x12	; 18
 154:	ac 01       	movw	r20, r24
 156:	02 2e       	mov	r0, r18
 158:	02 c0       	rjmp	.+4      	; 0x15e <main+0xf2>
 15a:	44 0f       	add	r20, r20
 15c:	55 1f       	adc	r21, r21
 15e:	0a 94       	dec	r0
 160:	e2 f7       	brpl	.-8      	; 0x15a <main+0xee>
 162:	46 2b       	or	r20, r22
 164:	42 bb       	out	0x12, r20	; 18
 166:	6f e7       	ldi	r22, 0x7F	; 127
 168:	48 e3       	ldi	r20, 0x38	; 56
 16a:	51 e0       	ldi	r21, 0x01	; 1
 16c:	61 50       	subi	r22, 0x01	; 1
 16e:	40 40       	sbci	r20, 0x00	; 0
 170:	50 40       	sbci	r21, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <main+0x100>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0x10a>
 176:	00 00       	nop
			_delay_ms(50);
		}
		
		
		int j=3;
		for(j;j>=0;j--){
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	31 09       	sbc	r19, r1
 17c:	50 f7       	brcc	.-44     	; 0x152 <main+0xe6>
 17e:	20 e0       	ldi	r18, 0x00	; 0
 180:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(50);
		}
		
		int l=0;
		for(l;l<4;l++){
			PORTD &= ~(1<<(PD0+l));
 182:	52 b3       	in	r21, 0x12	; 18
 184:	bc 01       	movw	r22, r24
 186:	02 2e       	mov	r0, r18
 188:	02 c0       	rjmp	.+4      	; 0x18e <main+0x122>
 18a:	66 0f       	add	r22, r22
 18c:	77 1f       	adc	r23, r23
 18e:	0a 94       	dec	r0
 190:	e2 f7       	brpl	.-8      	; 0x18a <main+0x11e>
 192:	46 2f       	mov	r20, r22
 194:	40 95       	com	r20
 196:	45 23       	and	r20, r21
 198:	42 bb       	out	0x12, r20	; 18
 19a:	4f e7       	ldi	r20, 0x7F	; 127
 19c:	58 e3       	ldi	r21, 0x38	; 56
 19e:	61 e0       	ldi	r22, 0x01	; 1
 1a0:	41 50       	subi	r20, 0x01	; 1
 1a2:	50 40       	sbci	r21, 0x00	; 0
 1a4:	60 40       	sbci	r22, 0x00	; 0
 1a6:	e1 f7       	brne	.-8      	; 0x1a0 <main+0x134>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0x13e>
 1aa:	00 00       	nop
			PORTD |=(1<<(PD0+j));
			_delay_ms(50);
		}
		
		int l=0;
		for(l;l<4;l++){
 1ac:	2f 5f       	subi	r18, 0xFF	; 255
 1ae:	3f 4f       	sbci	r19, 0xFF	; 255
 1b0:	24 30       	cpi	r18, 0x04	; 4
 1b2:	31 05       	cpc	r19, r1
 1b4:	31 f7       	brne	.-52     	; 0x182 <main+0x116>
 1b6:	24 e0       	ldi	r18, 0x04	; 4
 1b8:	30 e0       	ldi	r19, 0x00	; 0
			_delay_ms(50);
		}
		
		int i=4;
		for(i;i<8;i++){
			PORTD |= (1<<(PD0+i));
 1ba:	62 b3       	in	r22, 0x12	; 18
 1bc:	ac 01       	movw	r20, r24
 1be:	02 2e       	mov	r0, r18
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <main+0x15a>
 1c2:	44 0f       	add	r20, r20
 1c4:	55 1f       	adc	r21, r21
 1c6:	0a 94       	dec	r0
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <main+0x156>
 1ca:	46 2b       	or	r20, r22
 1cc:	42 bb       	out	0x12, r20	; 18
 1ce:	4f e7       	ldi	r20, 0x7F	; 127
 1d0:	58 e3       	ldi	r21, 0x38	; 56
 1d2:	61 e0       	ldi	r22, 0x01	; 1
 1d4:	41 50       	subi	r20, 0x01	; 1
 1d6:	50 40       	sbci	r21, 0x00	; 0
 1d8:	60 40       	sbci	r22, 0x00	; 0
 1da:	e1 f7       	brne	.-8      	; 0x1d4 <main+0x168>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <main+0x172>
 1de:	00 00       	nop
			PORTD &= ~(1<<(PD0+l));
			_delay_ms(50);
		}
		
		int i=4;
		for(i;i<8;i++){
 1e0:	2f 5f       	subi	r18, 0xFF	; 255
 1e2:	3f 4f       	sbci	r19, 0xFF	; 255
 1e4:	28 30       	cpi	r18, 0x08	; 8
 1e6:	31 05       	cpc	r19, r1
 1e8:	41 f7       	brne	.-48     	; 0x1ba <main+0x14e>
 1ea:	27 e0       	ldi	r18, 0x07	; 7
 1ec:	30 e0       	ldi	r19, 0x00	; 0
		}

		
		int k=7;
		for(k;k>=4;k--){
			PORTD &= ~(1<<(PD0+k));
 1ee:	52 b3       	in	r21, 0x12	; 18
 1f0:	bc 01       	movw	r22, r24
 1f2:	02 2e       	mov	r0, r18
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <main+0x18e>
 1f6:	66 0f       	add	r22, r22
 1f8:	77 1f       	adc	r23, r23
 1fa:	0a 94       	dec	r0
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <main+0x18a>
 1fe:	46 2f       	mov	r20, r22
 200:	40 95       	com	r20
 202:	45 23       	and	r20, r21
 204:	42 bb       	out	0x12, r20	; 18
 206:	4f e7       	ldi	r20, 0x7F	; 127
 208:	58 e3       	ldi	r21, 0x38	; 56
 20a:	61 e0       	ldi	r22, 0x01	; 1
 20c:	41 50       	subi	r20, 0x01	; 1
 20e:	50 40       	sbci	r21, 0x00	; 0
 210:	60 40       	sbci	r22, 0x00	; 0
 212:	e1 f7       	brne	.-8      	; 0x20c <main+0x1a0>
 214:	00 c0       	rjmp	.+0      	; 0x216 <main+0x1aa>
 216:	00 00       	nop
			_delay_ms(50);
		}

		
		int k=7;
		for(k;k>=4;k--){
 218:	21 50       	subi	r18, 0x01	; 1
 21a:	31 09       	sbc	r19, r1
 21c:	23 30       	cpi	r18, 0x03	; 3
 21e:	31 05       	cpc	r19, r1
 220:	31 f7       	brne	.-52     	; 0x1ee <main+0x182>
 222:	2a cf       	rjmp	.-428    	; 0x78 <main+0xc>

00000224 <_exit>:
 224:	f8 94       	cli

00000226 <__stop_program>:
 226:	ff cf       	rjmp	.-2      	; 0x226 <__stop_program>
